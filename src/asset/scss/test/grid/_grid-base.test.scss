@import 'true';

@import '../../grid/grid';

@include test-module('grid(): base') {
  @include test('should output base styles using fallback gutter') {
    @include assert {
      @include output {
        @include grid-base();
      }
      @include expect {
        .grid__item {
          box-sizing: border-box;
          vertical-align: top;
          display: inline-block;
          width: 100%;
        }
      }
    }
  }

  @include test('should output base styles when passed a gutter as px') {
    @include assert {
      @include output {
        @include grid-gutter('', 20px);
      }
      @include expect {
        .grid {
          margin-left: -20px;
        }
        .grid > .grid__item {
          padding-left: 20px;
        }
      }
    }
  }

  @include test('should output base styles when passed a gutter as em') {
    @include assert {
      @include output {
        @include grid-gutter('', 2em);
      }
      @include expect {
        .grid {
          margin-left: -2em;
        }
        .grid > .grid__item {
          padding-left: 2em;
        }
      }
    }
  }

  @include test('should output base styles when passed a gutter as %') {
    @include assert {
      @include output {
        @include grid-gutter('', 20%);
      }
      @include expect {
        .grid {
          margin-left: -20%;
        }
        .grid > .grid__item {
          padding-left: 16.66667%;
        }
      }
    }
  }

  @include test('should allow custom gutters for grid modifiers') {
    @include assert {
      @include output {
        @include grid-gutter('foo', 1em);
        @include grid-gutter('bar', 10%);
      }
      @include expect {
        .grid--foo {
          margin-left: -1em;
        }
        .grid--foo > .grid__item {
          padding-left: 1em;
        }
        .grid--bar {
          margin-left: -10%;
        }
        .grid--bar > .grid__item {
          padding-left: 9.09091%;
        }
      }
    }
  }

  @include test('should output styles to visually reverse grid item order') {
    @include assert {
      @include output {
        @include grid-reverse();
      }
      @include expect {
        .grid--reverse {
          direction: rtl;
          text-align: right;
        }
        .grid--reverse > .grid__item {
          direction: ltr;
          text-align: left;
        }
      }
    }
  }

  @include test('should output reverse grid with prefixed with modifiers') {
    @include assert {
      @include output {
        @include grid-reverse('desktop');
      }
      @include expect {
        .grid--desktop-reverse {
          direction: rtl;
          text-align: right;
        }
        .grid--desktop-reverse > .grid__item {
          direction: ltr;
          text-align: left;
        }
      }
    }
  }

  @include test('should output base styles when expecting uncompressed html') {
    @include assert {
      @include output {
        @include grid-uncompressed();
      }
      @include expect {
        .grid {
          letter-spacing: -0.25em;
        }
        .grid__item {
          letter-spacing: normal;
        }
      }
    }
  }
}
